
name: build-gcc-arm

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-24.04
    strategy:
      matrix:
        arch: [32, 64]

    outputs:
      GCC_VERSION: ${{ steps.build.outputs.GCC_VERSION }}
      GDB_VERSION: ${{ steps.build.outputs.GDB_VERSION }}
      MAKE_VERSION: ${{ steps.build.outputs.MAKE_VERSION }}
      OUTPUT_BINARY: ${{ steps.build.outputs.OUTPUT_BINARY }}

    steps:

      - name: checkout
        uses: actions/checkout@v4

      - name: install dependencies
        run: |
          sudo apt install --no-install-recommends -y \
            ca-certificates \
            libgmp-dev      \
            libmpc-dev      \
            libmpfr-dev     \
            libisl-dev      \
            xz-utils        \
            texinfo         \
            patch           \
            p7zip           \
            cmake           \
            make            \
            curl            \
            m4              \
            gcc             \
            g++             \
            mingw-w64

      - name: build
        id: build
        run: ./build.sh ${{ matrix.arch }}

      - name: upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.build.outputs.OUTPUT_BINARY }}
          path: ${{ steps.build.outputs.OUTPUT_BINARY }}.7z
          if-no-files-found: error
          compression-level: 0

  release:
    runs-on: ubuntu-24.04
    needs: build
    permissions:
      contents: write
    env:
      GH_TOKEN: ${{ github.token }}
    steps:

      - name: release
        run: |
          echo 'GCC v${{ needs.build.outputs.GCC_VERSION }}'   >>notes.txt
          echo 'GDB v${{ needs.build.outputs.GDB_VERSION }}'   >>notes.txt
          echo 'Make v${{ needs.build.outputs.MAKE_VERSION }}' >>notes.txt
          gh release create gcc-v${{ needs.build.outputs.GCC_VERSION }} -R "${GITHUB_REPOSITORY}" -t 'gcc-v${{ needs.build.outputs.GCC_VERSION }}' -F notes.txt

      - name: get artifacts
        uses: actions/download-artifact@v4
        with:
          pattern: gcc-v${{ needs.build.outputs.GCC_VERSION }}-*
          merge-multiple: true

      - name: upload artifacts
        run: gh release upload 'gcc-v${{ needs.build.outputs.GCC_VERSION }}' gcc-v${{ needs.build.outputs.GCC_VERSION }}-*.7z -R "${GITHUB_REPOSITORY}"
